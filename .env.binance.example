# Binance Exchange Configuration
# This file documents all Binance-related environment variables
# Copy relevant variables to your .env file

# ============================================================================
# BINANCE API CREDENTIALS
# ============================================================================

# Mainnet API Keys (PRODUCTION - Use with extreme caution!)
# Get from: https://www.binance.com/en/my/settings/api-management
BINANCE_API_KEY=your_binance_mainnet_api_key_here
BINANCE_API_SECRET=your_binance_mainnet_api_secret_here

# Testnet API Keys (DEVELOPMENT - Safe for testing)
# Get from: https://testnet.binance.vision/
BINANCE_TESTNET_API_KEY=your_binance_testnet_api_key_here
BINANCE_TESTNET_API_SECRET=your_binance_testnet_api_secret_here

# ============================================================================
# ENVIRONMENT SELECTION
# ============================================================================

# Use testnet (true) or mainnet (false)
# ALWAYS use testnet for development and testing!
# Format: true or false
BINANCE_TESTNET=true

# ============================================================================
# API REQUEST SETTINGS
# ============================================================================

# Request timeout in seconds
# Increase if experiencing timeout errors on slow connections
# Default: 30
BINANCE_TIMEOUT=30

# Receive window for API requests in milliseconds
# This is the time window that the request is valid for
# Default: 5000 (5 seconds)
# Range: 1000-60000
BINANCE_RECV_WINDOW=5000

# ============================================================================
# RATE LIMITING
# ============================================================================

# Maximum requests per minute for general endpoints
# Binance limit: 1200/minute
# Set lower for safety margin
# Default: 1200
BINANCE_RATE_LIMIT=1200

# Maximum order requests per minute
# Binance limit: 100/minute for order endpoints
# Set lower for safety margin
# Default: 100
BINANCE_ORDER_RATE_LIMIT=100

# ============================================================================
# RETRY CONFIGURATION
# ============================================================================

# Maximum number of retry attempts for failed requests
# Default: 3
BINANCE_MAX_RETRIES=3

# Initial retry delay in seconds
# Default: 1.0
BINANCE_INITIAL_RETRY_DELAY=1.0

# Maximum retry delay in seconds (exponential backoff cap)
# Default: 30.0
BINANCE_MAX_RETRY_DELAY=30.0

# Retry backoff multiplier
# Each retry waits: previous_delay * backoff_factor
# Default: 2.0
BINANCE_RETRY_BACKOFF_FACTOR=2.0

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Log all API requests and responses
# Set to true for debugging, false for production
# Default: false
BINANCE_LOG_REQUESTS=false

# Sanitize sensitive data in logs (API keys, signatures)
# Should always be true in production
# Default: true
BINANCE_SANITIZE_LOGS=true

# ============================================================================
# TRADING LIMITS
# ============================================================================

# Minimum order size in USDT
# Binance minimum varies by symbol, this is a safe default
# Default: 10
MIN_ORDER_SIZE_USDT=10

# Maximum order size in USDT (safety limit)
# Prevents accidentally placing huge orders
# Default: 10000
MAX_ORDER_SIZE_USDT=10000

# ============================================================================
# WEBSOCKET CONFIGURATION (Future Use)
# ============================================================================

# Enable websocket for real-time data
# Default: false
BINANCE_WEBSOCKET_ENABLED=false

# Websocket ping interval in seconds
# Default: 180 (3 minutes)
BINANCE_WEBSOCKET_PING_INTERVAL=180

# ============================================================================
# EXAMPLE USAGE
# ============================================================================

# For integration tests:
# export BINANCE_TESTNET_API_KEY="your_testnet_key"
# export BINANCE_TESTNET_API_SECRET="your_testnet_secret"
# pytest tests/integration/execution/adapters/test_binance_integration.py -v

# For development with testnet:
# cp .env.example .env
# Edit .env and set BINANCE_TESTNET=true
# Add your testnet credentials
# python -m bot.cli run --profile dev

# For production (EXTREME CAUTION):
# cp .env.example .env
# Edit .env and set BINANCE_TESTNET=false
# Add your mainnet credentials
# Ensure all safety checks are in place
# Start with small amounts
# Monitor closely
# python -m bot.cli run --profile prod

# ============================================================================
# SECURITY NOTES
# ============================================================================

# 1. NEVER commit .env file to version control
# 2. Use API key restrictions:
#    - Enable only necessary permissions (Spot Trading, Read)
#    - Disable withdrawals
#    - Add IP whitelist restrictions
# 3. Use separate API keys for testnet and mainnet
# 4. Rotate API keys periodically
# 5. Monitor API key usage in Binance dashboard
# 6. Start with testnet, extensively test before mainnet
# 7. Start with small amounts on mainnet
# 8. Enable all available security features (2FA, email notifications)
